# Estágio 1: build do Ambiente
FROM python:3.10-slim AS build

# Instale dependências do sistema
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# Adicione a chave GPG oficial do Docker
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

# Referencie um repositório estável
RUN echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list

# Instale Docker CLI
RUN apt-get update && apt-get install -y docker-ce-cli

# Instale Docker Compose
RUN curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
    && chmod +x /usr/local/bin/docker-compose

# Instale Prefect e outras dependências
COPY requirements.txt .
RUN pip install -r requirements.txt

# Copie .env.example para .env
COPY .env.example /app/.env

# Estágio 2: Ambiente runtime
FROM python:3.10-slim

# Copie Docker CLI e Docker Compose do estágio de build
COPY --from=build /usr/bin/docker /usr/bin/docker
COPY --from=build /usr/local/bin/docker-compose /usr/local/bin/docker-compose

# Copie as dependências Python do estágio de build
COPY --from=build /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages
COPY --from=build /usr/local/bin/prefect /usr/local/bin/prefect

# Copie o arquivo .env
COPY --from=build /app/.env /app/.env

# Comando para iniciar o servidor Prefect
CMD ["prefect", "server", "start"]

# Defina as portas nas quais o servidor Prefect irá escutar
EXPOSE 4200 8080 8081